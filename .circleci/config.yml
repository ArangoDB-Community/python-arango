version: 2.1

# orbs:
#   coveralls: coveralls/coveralls@2.2.1

workflows:
  ci:
    jobs:
      - lint
      - test:
          matrix:
            parameters:
              python_version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
              arangodb_config: ["single", "cluster"]
              arangodb_license: ["community", "enterprise"]
              arangodb_version: ["3.10.10", "3.11.4", "latest"]

jobs:
  lint:
    docker:
      - image: python:latest
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: pip install .[dev]

      - run:
          name: Run black
          command: black --check --verbose --diff --color --config=pyproject.toml ./arango ./tests/

      - run:
          name: Run flake8
          command: flake8 ./arango ./tests

      - run:
          name: Run isort
          command: isort --check ./arango ./tests

      - run:
          name: Run mypy
          command: mypy ./arango

  test:
    parameters:
      python_version:
        type: string
      arangodb_config:
        type: string
      arangodb_license:
        type: string
      arangodb_version:
        type: string
    machine:
      image: ubuntu-2004
    steps:
      - checkout

      - run:
          name: Set Up ArangoDB
          command: |
            chmod +x starter.sh
            ./starter.sh << parameters.arangodb_config >> << parameters.arangodb_license >> << parameters.arangodb_version >>

      - restore_cache:
          key: pip-and-local-cache

      - run:
          name: Setup Python
          command: |
            pyenv install << parameters.python_version >>
            pyenv global << parameters.python_version >>

      - run:
          name: "Install Dependencies"
          command: pip install -e .[dev]

      - run: docker ps -a

      - run:
          name: "Run pytest"
          command: |
            mkdir test-results

            args=("--junitxml=test-results/junit.xml" "--log-cli-level=DEBUG" "--host" "localhost" "--port=8529")
            if [ << parameters.arangodb_config >> = "cluster" ]; then
              args+=("--cluster" "--port=8539" "--port=8549")
            fi

            if [ << parameters.arangodb_license >> = "enterprise" ]; then
              args+=("--enterprise")
            fi

            echo "Running pytest with args: ${args[@]}"
            pytest --cov=arango --cov-report=xml "${args[@]}"

      - store_artifacts:
          path: test-results

      - store_test_results:
          path: test-results

      # - coveralls/upload
